k8s {
   namespace = 'medgen-ns'
   runAsUser = 1000
   storageClaimName = 'pvc-jans-elixir-share'
   storageMountPath = '/mnt'
   homeDir = '/mnt/share/710000-CEITEC/713000-cmm/713003-pospisilova/cmbg/germ'
   launchDir = "${k8s.homeDir}/src/launch"
   projectDir = "${k8s.homeDir}/src/project"
   workDir = "${k8s.homeDir}/src/temp"
}

params {
   outDirectory = "${k8s.homeDir}/data"
   projectDirectory = "${k8s.projectDir}/xsvato01/CMBG_Germinal"

   ref = '/mnt/share/710000-CEITEC/713000-cmm/713003-pospisilova/base/MedGen/references/Homo_sapiens/GATK/GRCh38/Sequence/WholeGenomeFasta/Homo_sapiens_assembly38'
   vep = '/mnt/share/710000-CEITEC/713000-cmm/713003-pospisilova/base/MedGen/references/Homo_sapiens/GATK/GRCh38/Annotation/vep'
   refindex = '/mnt/share/710000-CEITEC/713000-cmm/713003-pospisilova/base/MedGen/references/Homo_sapiens/GATK/GRCh38/Sequence/BWAIndex/Homo_sapiens_assembly38.fasta.64'
   gatkKnownSites = '/mnt/share/710000-CEITEC/713000-cmm/713003-pospisilova/base/MedGen/references/Homo_sapiens/GATK/GRCh38/Annotation/GATKBundle'
   plinkMap = '/mnt/share/710000-CEITEC/713000-cmm/713003-pospisilova/base/MedGen/references/Homo_sapiens/GATK/GRCh38/Plink'
   vcf2txt = "${k8s.projectDir}/xsvato01/CMBG_Germinal/bin/vcf2table108.py"

   panels = [
   [
      panelName: 'derma',
      bedFile: "${params.projectDirectory}/bin/derma-hg38.bed"
   ],
   [
      panelName: 'atero',
      bedFile: '/mnt/share/710000-CEITEC/713000-cmm/713003-pospisilova/cmbg/germ/src/derma-hg38.bed'
   ],
   [
      panelName: 'neuro',
      bedFile: "${params.projectDirectory}/bin/neuro-hg38.bed"
   ]
   ]
}


executor {
   queueSize = 200
}


process {
   shell = ['/bin/bash', '-eo', 'pipefail']
   scratch = true
   executor = 'k8s'
   pod = [[imagePullSecret:'gitlab-svaton-secret'], [securityContext:[fsGroupChangePolicy:'OnRootMismatch', allowPrivilegeEscalation:false, runAsUser:1000, runAsGroup:1, fsGroup:1, capabilities:[drop:['ALL']]]], [nodeSelector:'storage=local-ssd']]
   errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
   maxRetries = 3
   cpus = 1
   memory = '1GB'
   
   withLabel: gatk {
	container = 'broadinstitute/gatk:4.2.3.0'
   }

   withLabel: xxs_mem {
   memory = {100.MB * task.attempt * (3/4)}
   }
   withLabel: xs_mem {
   memory = {500.MB * task.attempt * (3/4)}
   }
   withLabel: s_mem {
   memory = {1200.MB * task.attempt * (3/4)}
   }
   withLabel: m_mem {
   memory = {2.GB * task.attempt * (3/4)}
   }
   withLabel: l_mem {
   memory = {12.GB * task.attempt * (3/4)}
   }
   withLabel: xl_mem {
   memory = {24.GB * task.attempt * (3/4)}
   }
   withLabel: s_cpu {
   cpus = 1
   }
   withLabel: m_cpu {
   cpus = 4
   }
   withLabel: l_cpu {
   cpus = 6
   }
}
